version: "3.8"

volumes:
    db-data:

services:

    db:
        image: postgres:15-alpine
        container_name: db_ng
        environment:
            - "POSTGRES_USER=${POSTGRES_USER}"
            - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
            - "POSTGRES_DB=${POSTGRES_DB}"
        volumes:
            - "./db-data:/var/lib/postgresql/data"
        ports:
            - "5432:5432"
        healthcheck:
            test:
                [
                    "CMD",
                    "pg_isready",
                    "--username=${POSTGRES_USER}",
                    "-d",
                    "${POSTGRES_DB}"
                ]

    api:
        image: api_ng
        container_name: api_ng
        build: ./backend
        command: bash -c "npm install && npm run build && npm start"
        volumes:
            - ./backend:/code
        ports:
            - "52000:52000"
        depends_on:
            db:
                condition: service_healthy

    front:
        image: front_ng
        container_name: front_ng
        build: ./frontend
        command: bash -c "npm install && npm run dev"
        ports:
            - "3000:3000"
        volumes:
            - ./frontend:/code/
        depends_on:
            - api
        external_links: 
            - "api:api.teste.com"
